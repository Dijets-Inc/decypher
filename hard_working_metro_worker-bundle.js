(()=>{var e={287:e=>{const t=["alarms","bookmarks","browserAction","commands","contextMenus","cookies","downloads","events","extension","extensionTypes","history","i18n","idle","notifications","pageAction","runtime","storage","tabs","webNavigation","webRequest","windows"],a="undefined"!=typeof chrome,o="undefined"!=typeof window,s="undefined"!=typeof browser;e.exports=function(){const e=this;if(t.forEach((function(t){if(e[t]=null,a)try{chrome[t]&&(e[t]=chrome[t])}catch(e){}if(o)try{window[t]&&(e[t]=window[t])}catch(e){}if(s){try{browser[t]&&(e[t]=browser[t])}catch(e){}try{e.api=browser.extension[t]}catch(e){}}})),s){try{browser&&browser.runtime&&(this.runtime=browser.runtime)}catch(e){}try{browser&&browser.browserAction&&(this.browserAction=browser.browserAction)}catch(e){}}}},972:(e,t,a)=>{const o=a(287);e.exports=new o}},t={};function a(o){var s=t[o];if(void 0!==s)return s.exports;var n=t[o]={exports:{}};return e[o](n,n.exports,a),n.exports}a.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return a.d(t,{a:t}),t},a.d=(e,t)=>{for(var o in t)a.o(t,o)&&!a.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},a.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{"use strict";var e=a(972),t=a.n(e);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}const s="requestAccess",n="getSuccessfulTransactions",d="requestSeed",r="getCurrentConnections",i="eth_getTransactionReceipt";class c{constructor(e,t){o(this,"method",void 0),o(this,"data",void 0),this.method=e,this.data=t}postJsonRPC(e){return fetch(e,{method:"post",headers:{Accept:"application/json","Content-Type":"application/json"},body:JSON.stringify({method:this.method,params:this.data,id:1,jsonrpc:"2.0"})})}}class h{constructor(e){var t,a;a=void 0,(t="pinEncryptedSeed")in this?Object.defineProperty(this,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):this[t]=a,this.pinEncryptedSeed=e}getSeed(){return this.pinEncryptedSeed}}let l,p,m,u="";var w,g=[],f={},b={};self.addEventListener("message",(e=>{if(e.data&&"getNotificationRequests"===e.data.method&&self.clients.matchAll({includeUncontrolled:!0,type:"window"}).then((e=>{e&&e.length&&e[0].postMessage(l)})),e.data&&e.data.method===r&&self.clients.matchAll({includeUncontrolled:!0,type:"window"}).then((e=>{e&&e.length&&e[0].postMessage(new c(r,{ports:JSON.stringify(f)}))})),e.data&&"deletePort"===e.data.method&&(e.data.tabId in f&&(f[e.data.tabId].disconnect(),delete f[e.data.tabId]),e.data.tabId in b&&(b[e.data.tabId].disconnect(),delete b[e.data.tabId]),self.clients.matchAll({includeUncontrolled:!0,type:"window"}).then((e=>{e&&e.length&&e[0].postMessage(new c(r,{ports:JSON.stringify(f)}))}))),e.data&&"initWorkerVault"==e.data.method&&(null==w?(console.log("Worker succesfully initialized vault"),w=new h(e.data.pinEncryptedSeed)):console.warn("INIT_WORKER_VAULT Called when worker already has a vault initialized!")),e.data&&"SET_NODE_URI"==e.data.method&&(u=e.data.uri),e.data&&e.data.method==d&&self.clients.matchAll({includeUncontrolled:!0,type:"window"}).then((e=>{e&&e.length&&(w?e[0].postMessage(new c(d,{pinEncryptedSeed:w.getSeed(),status:"HAS_SEED"})):e[0].postMessage(new c(d,{status:"NO_SEED"})))})),e.data&&"addTransaction"==e.data.method&&self.clients.matchAll({includeUncontrolled:!0,type:"window"}).then((t=>{let a=new c(i,[e.data.data.txHash]),o=async()=>{setTimeout((async()=>{a.postJsonRPC(u).then((a=>{a.json().then((a=>{null!=a.result?"0x1"==a.result.status?(g.push(e.data.data),t&&t.length&&null!=g&&t[0].postMessage(new c(n,{status:"FOUND",txs:g}))):"0x0"==a.result.status&&console.log("Transaction Failed!"):o()}))}))}),700)};o()})),e.data&&e.data.method==n&&self.clients.matchAll({includeUncontrolled:!0,type:"window"}).then((e=>{e&&e.length&&null!=g&&e[0].postMessage(new c(n,{status:"FOUND",txs:g}))})),e.data&&"clearPendingTransactions"==e.data.method&&self.clients.matchAll({includeUncontrolled:!0,type:"window"}).then((e=>{null!=g&&(g=[])})),e.data&&"deleteVault"==e.data.method&&self.clients.matchAll({includeUncontrolled:!0,type:"window"}).then((e=>{w=null})),e.data&&"approveAccess"===e.data.method){if(!(e.data.port.sender.tab.id in b))return void console.error("Port is not found? Tell the devs to investigate...");f[e.data.port.sender.tab.id]=b[e.data.port.sender.tab.id],(a=f[e.data.port.sender.tab.id]).onMessage.addListener((e=>{"eth_getBalance"===e.method&&new c(e.method,e.params).postJsonRPC(u).then((t=>{t.json().then((t=>{a.postMessage({method:e.method,data:t})}))})).catch((t=>{a.postMessage({method:e.method,data:t})})),"eth_getBlockByNumber"===e.method&&new c(e.method,e.params).postJsonRPC(u).then((t=>{t.json().then((t=>{a.postMessage({method:e.method,data:t})}))})).catch((t=>{a.postMessage({method:e.method,data:t})})),"eth_gasPrice"===e.method&&new c(e.method,e.params).postJsonRPC(u).then((t=>{t.json().then((t=>{a.postMessage({method:e.method,data:t})}))})).catch((t=>{a.postMessage({method:e.method,data:t})})),"eth_call"===e.method&&new c(e.method,e.params).postJsonRPC(u).then((t=>{t.json().then((t=>{a.postMessage({method:e.method,data:t})}))})).catch((t=>{a.postMessage({method:e.method,data:t})})),"eth_blockNumber"===e.method&&new c(e.method,e.params).postJsonRPC(u).then((t=>{t.json().then((t=>{a.postMessage({method:e.method,data:t})}))})).catch((t=>{a.postMessage({method:e.method,data:t})})),"eth_estimateGas"===e.method&&new c(e.method,e.params).postJsonRPC(u).then((t=>{t.json().then((t=>{a.postMessage({method:e.method,data:t})}))})).catch((t=>{a.postMessage({method:e.method,data:t})})),e.method===i&&new c(e.method,e.params).postJsonRPC(u).then((t=>{t.json().then((t=>{a.postMessage({method:e.method,data:t})}))})).catch((t=>{a.postMessage({method:e.method,data:t})})),"eth_sendTransaction"===e.method&&(l=new c("eth_sendTransaction",e.params[0]),chrome.windows.create({url:"metroNotification/index.html",width:345,height:525,top:0,focused:!0,type:"popup"}).then((e=>{p=e})))})),f[e.data.port.sender.tab.id].postMessage({method:"approveAccess",data:{accounts:e.data.accounts,chainId:e.data.chainId,jsonRpcUrl:"https://"+e.data.nodeIp+":443/ext/bc/C/rpc"}}),u="https://"+e.data.nodeIp+":443/ext/bc/C/rpc",self.clients.matchAll({includeUncontrolled:!0,type:"window"}).then((e=>{e&&e.length&&e[0].postMessage(new c(r,{ports:JSON.stringify(f)}))}))}var a;if(e.data&&"rejectAccess"===e.data.method&&m.postMessage({method:"rejectAccess"}),e.data&&"eth_sendTransaction"===e.data.method&&m.postMessage({method:"eth_sendTransaction",data:e.data.response}),e.data&&"changeChainId"===e.data.method){let t=Object.values(f);for(let a=0;a<t.length;a++)t[a].postMessage({method:"changeChainId",data:e.data.chainId})}if(e.data&&"changeAccounts"===e.data.method){let t=Object.values(f);for(let a=0;a<t.length;a++)t[a].postMessage({method:"changeAccounts",data:e.data.accounts})}e.data&&"closePopup"===e.data.method&&t().windows.remove(p.id)})),t().runtime.onConnect.addListener((function(e){"metro-worker-messenger"===e.name&&(m=e,b[e.sender.tab.id]=e,e.onMessage.addListener((t=>{t.method===s&&(l=new c(s,{params:t.params[0],port:JSON.stringify(e)}),chrome.windows.create({url:"metroNotification/index.html",width:345,height:525,top:0,focused:!0,type:"popup"}).then((e=>{p=e})))})),e.onDisconnect.addListener((e=>{e.error?console.warn("Metro-Worker-Messenger Port disconnected: $(msg.error.message)"):console.warn("Port disonnected without error message."),e.sender.tab.id in f&&(delete f[e.sender.tab.id],self.clients.matchAll({includeUncontrolled:!0,type:"window"}).then((e=>{e&&e.length&&e[0].postMessage(new c(r,{ports:JSON.stringify(f)}))}))),e.sender.tab.id in b&&delete b[e.sender.tab.id]})))}))})()})();